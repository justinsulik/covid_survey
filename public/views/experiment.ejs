<!DOCTYPE html>
<html>
    <head>
        <title>Experiment</title>
        <script language="javascript" src="libraries/jquery-3.4.1.min.js"></script>
        <script language="javascript" src="libraries/lodash.js"></script>
        <script language="javascript" src="libraries/helper.js"></script>
        <script language="javascript" src="jspsych/jspsych.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-instructions.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-demographics.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-occupation.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-table-completion.js"></script>
        <link href="jspsych/css/jspsych.css" rel="stylesheet" type="text/css"></link>
        <link href="css/experiment.css" rel="stylesheet" type="text/css"></link>
    </head>
    <body>
    </body>
    <script>

    /*
    Set up: define a few experiment variables
    */

    // get the data passed along by app.js
    var input_data = <%- input_data %>
    var trial_id = input_data.trial_id;
    console.log('Rendering trial ', trial_id)
    jsPsych.data.addProperties({trial_id: trial_id});

    var timeline = [];
    var experiment_start_time;
    var data_not_processed = true;
    var dataUrl = '/data?trial_id=' + trial_id;
    var close_network = [];

    // Consent form

    var consent = {
      type: 'external-html',
      url: '../views/consent.html',
      check_fn: function(){
        // start the timer once they've clicked "consent"
        experiment_start_time = Date.now();
        return true;
      },
      cont_btn: 'consent'
    }

    // instructions

    var instructions = {
      type: 'instructions',
      pages: ['Hello, welcome, blah blah blah.'],
      show_clickable_nav: true,
    }

    var demographics = {
      type: 'demographics',
    }

    var occupation = {
      type: 'occupation'
    }

    var social_network = {
      type: 'table-completion',
      add_new: true,
      column_headers: ['Write down first names. Add new rows with "+"', 'face to face', 'video chat', 'phone', 'email', 'text message', 'letter', 'other'],
      column_icons: true,
      preamble: "Please write down the first names of all the people with whom you "+
      "had a conversation in the <b>past 7 days</b>, and <b>how</b> you interacted with them. "+
      "Please do not include casual contacts such as interactions with shop workers "+
      "or professionals (e.g., doctors, police, etc.).",
      on_finish: function(data){
        var responses = JSON.parse(data.responses)
        Object.keys(responses).forEach(function(id){
          if(responses[id].name){
            close_network.push({id: id, row_name: responses[id].name});
          }
        })
      }
    }

    var social_network_followup = {
      type: 'table-completion',
      add_new: false,
      column_headers: ['Names', 'I live in the same household with this person', 'I would turn to this person for advice or comfort when I have a major personal problem'],
      column_vars: ['names', 'live', 'comfort'],
      column_icons: false,
      preamble: 'Now, look at this list again: which of these people live with you '+
      'in the same household? Who you would turn to if you wanted to seek advice '+
      'or comfort in connection with a major personal problem (such as a terminal illness, '+
      'death of a loved one, or a serious accident)?',
      row_values: function(){
        return close_network;
      }
    }

    var social_network_followup_if = {
      timeline: [social_network_followup],
      conditional_function: function(){
        if(close_network.length>0){
          return true;
        } else {
          return false;
        }
      }
    }

    /*
    Add trials to the timeline
    */

    // timeline.push(instructions);
    timeline.push(social_network)
    timeline.push(social_network_followup_if)
    timeline.push(demographics);
    timeline.push(occupation);

    /*
    Have jsPsych display the experiment timeline
    */

    jsPsych.init({
        // uncomment if you need to preload anything that isn't a stim in an existing jspsych plugin
        // preload_images: [],
        default_iti: 500,
        show_progress_bar: true,
        exclusions: {
          min_width: 800,
          min_height: 500
        },
        experiment_width: 800,
        timeline: timeline,
        on_finish: function(){
          console.log('Experiment completed...')
          var data = helper.prepareData(experiment_start_time);
          helper.save(data, dataUrl, trial_id);
        }
    });

    </script>
</html>
